@*@model BASS.Models.ViewModels.CaseAssignment.AssignmentPaneViewModel*@
@using Kendo.Mvc.UI

@(Html.Kendo().Grid<BASS.Models.CaseAssignmentForAll>()
    .Name("gridCaseAssigned")
    .NoRecords("No Case found...")
    .Selectable()
    .Sortable(sortable => sortable.AllowUnsort(true))
    .Filterable(filterable => filterable
    .Extra(false)
    .Operators(operators =>
    {
        operators
        .ForString(str => str.Clear()
        .StartsWith("Starts with")
        .IsEqualTo("Is equal to")
        );
    }))
    .Columns(column =>
    {
    column.Bound(m => m.EpisodeID).Hidden(true);
    column.Bound(m => m.CDCRNum).Width(60).Title("CDCR#");
    column.Bound(m => m.OffenderName).Width(120).Title("Offender Name");
    column.Bound(m => m.ReleaseDate).Format("{0:MM/dd/YYYY}").Width(70).Title("Release Date");
    column.Bound(m => m.Housing).Width(120).Title("Housing");
    column.Bound(m => m.HIVPos).Title("HIV/AIDS").Template(@<input type="checkbox" />);
        column.Bound(m => m.ChronicIllness).Title("Chronic Illness").Template(@<input type="checkbox" />);
    })
    .DataSource(ds => ds.Ajax()
            .Batch(true)
            .ServerOperation(false)
            //.Events(e => { e.RequestEnd("RefreshGrid"); })
            .Model(m =>
            {
                m.Id(f => f.EpisodeID);
            })
            .Read(r => r.Action("CaseAssignmentForAllRead", "CaseAssignment", new { FromDate = DateTime.MinValue }))
    )

)
